server:
  port: 8011

eureka:
  instance:
    hostname: localhost
    port: 8761
    # 表示eureka client间隔多久去拉取服务注册信息，默认为30秒，如果要迅速获取服务注册状态，可以缩小该值
    lease-renewal-interval-in-seconds: 5
    # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
    # 默认为90秒
    # 如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
    # 如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
    # 该值至少应该大于 leaseRenewalIntervalInSeconds
    lease-expiration-duration-in-seconds: 10
    prefer-ip-address: true # 表示：将自己的ip注册到eureka
  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/

spring:
  application:
    name: xincan-transaction-order
  # shardingsphere配置
  shardingsphere:
    datasource:
      # 数据源名称
      names: ds-order,ds-user
      # 数据库 xincan-transaction-order 配置
      ds-order:
        type: com.alibaba.druid.pool.DruidDataSource #com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/xincan-transaction-order?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true&serverTimezone=GMT
        username: root
        password: 123456
      # 数据库 xincan-oauth 配置
      ds-user:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/xincan-transaction?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true&serverTimezone=GMT
        username: root
        password: 123456



mybatis-plus:
  mapper-locations: classpath:mapper/**/*.xml
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: false
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  level:
    com.xincan.transaction: debug
  file: ./log/${spring.application.name}/${spring.application.name}.log

